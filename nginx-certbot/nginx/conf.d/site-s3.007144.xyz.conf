# s3.007144.xyz

server {
    server_name  s3.007144.xyz;
    # listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    ssl_certificate /etc/letsencrypt/live/s3.007144.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/s3.007144.xyz/privkey.pem;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
       root /opt/nginx/html;
    }
}

# modern configuration
ssl_protocols TLSv1.3;
ssl_ecdh_curve X25519:prime256v1:secp384r1;
ssl_prefer_server_ciphers off;


# # OCSP stapling
# ssl_stapling on;
# ssl_stapling_verify on;

# # verify chain of trust of OCSP response using Root CA and Intermediate certs
# ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

# # replace with the IP address of your resolver;
# # async 'resolver' is important for proper operation of OCSP stapling
# resolver 127.0.0.1;

# If certificates are marked OCSP Must-Staple, consider managing the
# OCSP stapling cache with an external script, e.g. certbot-ocsp-fetcher

server {
    server_name  s3.007144.xyz;
    # listen       80 default_server;
    listen  [::]:80 default_server;

    # certbot
    location ^~ /.well-known/acme-challenge/ {
        root /opt/webroot;
    }
    location = /.well-known/acme-challenge/ {
        return 404;
    }

    location / {
        return 301 https://$host$request_uri;      # 初回の証明書取得だけは、httpsに飛ばさないようコメントアウト
    }
}